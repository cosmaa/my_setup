#!/bin/bash
set -e
DIR=$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)
cd ~/otto/
Yellow='\033[0;33m'
NC='\033[0m'
Blue='\033[0;34m'
Purple='\033[0;35m'



# ---------------------------- Funktions ----------------------------------------
function update_version() {
    local fn=$1
    local replace=$2
    local version=$3
    sed -i "s/$version/$replace/gi" "$fn"
    printf "${Purple}replaced VERSION $version with $replace ${NC}\n"

}

function check_package_versions() {
for package in "${LOOKING_FOR[@]}"; do
  echo "#######################"
  printf "${Purple}${package}${NC} Version: \n"
  FILES_TO_UPDATE=$(rg -l "$package") || echo "nothing found in this root $DIR"
  for fn in $FILES_TO_UPDATE; do
    VERSION=$(sed -n "/val $package/p" $fn | sed -e 's/[^0-9]/ /g' -e 's/^ *//g' -e 's/ *$//g')
    printf "version $Yellow %s $NC in project $Blue%s$NC \n" "$VERSION" "$(dirname "${fn}")"
  done
done

}


# ---------------------------- RUN ----------------------------------------
LOOKING_FOR=("keycloakResourceServerVersion" "reactiveSecurityVersion")

check_package_versions

echo "======================="
read -p "are this files okay to update? [y,N]: " okay
if [[ $okay == "y" || $okay == "Y" ]]; then
  for package in "${LOOKING_FOR[@]}"; do

    printf "####################### \n please enter new version of ${Purple}$package${NC}: "
    FILES_TO_UPDATE=$(rg -l "$package") || echo "nothing found in this root $DIR"
    read -p "" replace

    for fn in $FILES_TO_UPDATE; do

      VERSION=$(sed -n "/val $package/p" $fn | sed -e 's/[^0-9]/ /g' -e 's/^ *//g' -e 's/ *$//g')
      printf "want to replace ${Yellow}%s${NC} with ${Purple}%s${NC} in project $Blue%s$NC ???  [Y,n]: " "$replace" "$VERSION" "$(dirname "${fn}")"
      read -p "" enter
      if [[ $enter == "n" || $enter == "N" ]]; then
          printf "${Yellow}not updating${NC}\n"
        else
          update_version "$fn" "$replace" "$VERSION"
      fi
    done
  done

  check_package_versions

  echo "#######################"
  echo "cool its done"
  echo "#######################"

fi

